
*** Start of List File:test8.asm     Completed        2024-02-12 19:50:39.957014

LN# ADDR  OPCD DATA                    SOURCE
------------------------------------------------------------------------------------------------------------------------------------
  1                                      ; Output FF down to 00 on the 7 seg display.
  2
  3                                      start:
  4
  5 0000  (00) 0000                              nop
  6                                              ; setup the stack pointer to an area of RAM
  7 0002  (66) CC00 F000                         loadimm r0,#F000
  8 0006  (2B) 5600                              putsp r0
  9                                              ; clear display
 10 0008  (66) CC00 00FF                         loadimm r0,#00FF
 11 000C  (51) A200 FFF0                         storebi r0,[#FFF0]
 12 0010  (51) A200 FFF1                         storebi r0,[#FFF1]
 13                                              ; RAM starts of 0x8000, and we will start our table of primes there.
 14                                              ; The sieve table has an entry for each number from 0-255.
 15                                              ; Let us zero out that entire table
 16 0014  (66) CC40 00FF                         loadimm r1,255  ; size of the sieve table (0-255)
 17 0018  (66) CDC0 8000                         loadimm r7,#8000 ; pointer to the sieve table
 18 001C  (66) CC00 0000                         loadimm r0,0
 19 0020  (04) 08B9                      lp1:    add r1,r7,r2
 20 0022  (11) 2210                              storerb r0,r2
 21 0024  (42) 8441 0001                         subi r1,1,r1
 22 0028  (5A) B400 0020                         jnzi lp1
 23 002C  (66) CC00 0001                         loadimm r0,1
 24 0030  (11) 2238                              storerb r0,r7   ; 0 is not prime
 25 0032  (44) 89C7 0001                         addi r7,1,r7
 26 0036  (11) 2238                              storerb r0,r7   ; 1 is not prime
 27 0038  (44) 89C7 0001                         addi r7,1,r7
 28                                              ; lets mark all of the even numbers as not prime
 29 003C  (66) CC00 0002                         loadimm r0,2
 30 0040  (78) F000 009A                         calli mark
 31                                              ; lets now mark all of the odd numbers up to the sqrt of 256
 32 0044  (66) CC40 0011                         loadimm r1,17
 33 0048  (66) CC00 0003                         loadimm r0,3
 34 004C  (78) F000 009A                 lp2:    calli mark
 35 0050  (44) 8800 0002                         addi r0,2,r0
 36 0054  (12) 2401                              cmp r1,r0
 37 0056  (5C) B800 004C                         jnci lp2
 38
 39                                      disp:
 40                                      ; this routine will display all of the primes
 41 005A  (2E) 5C00                              push r0
 42 005C  (2E) 5C08                              push r1
 43 005E  (2E) 5C10                              push r2
 44 0060  (2E) 5C18                              push r3
 45 0062  (2E) 5C20                              push r4
 46 0064  (66) CC00 0000                         loadimm r0,0        ; the current number we are looking at
 47 0068  (66) CC80 8100                         loadimm r2,#8100    ; the end address of the table
 48 006C  (66) CCC0 0000                         loadimm r3,0        ; the flag for a number being prime
 49
 50                                      displp:
 51 0070  (44) 8800 0001                         addi r0,1,r0        ; increment the number we are looking for
 52 0074  (44) 8840 8000                         addi r0,#8000,r1    ; r1 = the address to get
 53 0078  (12) 240A                              cmp r2,r1           ; if we are at the end address, we are done
 54 007A  (59) B200 008E                         jzi dispdone
 55 007E  (15) 2B08                              loadbr r1,r4        ; get the value from the table
 56 0080  (12) 2423                              cmp r3,r4
 57 0082  (59) B200 0070                         jzi displp          ; if the memory location is not zero, this is not a prime, so
 58 0086  (78) F000 00BE                         calli sevseg         ; if it is prime, print on the 7 segment display
 59 008A  (58) B000 0070                         jmpi displp
 60                                      dispdone:
 61 008E  (30) 6100                              pop r4
 62 0090  (30) 60C0                              pop r3
 63 0092  (30) 6080                              pop r2
 64 0094  (30) 6040                              pop r1
 65 0096  (30) 6000                              pop r0
 66 0098  (38) 7000                              ret
 67
 68
 69
 70                                      ; this routine will take r0 and use is as the increment the mark the sieve
 71                                      mark:
 72 009A  (2E) 5C08                              push r1
 73 009C  (2E) 5C10                              push r2
 74 009E  (2E) 5C18                              push r3
 75 00A0  (66) CC40 0001                         loadimm r1,1
 76 00A4  (66) CC80 8100                         loadimm r2,#8100
 77 00A8  (66) CCC0 8000                         loadimm r3,#8000
 78                                      mk2:
 79 00AC  (04) 08C3                              add r3,r0,r3
 80 00AE  (11) 2219                              storerb r1,r3
 81 00B0  (12) 241A                              cmp r2,r3
 82 00B2  (5C) B800 00AC                         jnci mk2
 83 00B6  (30) 60C0                              pop r3
 84 00B8  (30) 6080                              pop r2
 85 00BA  (30) 6040                              pop r1
 86 00BC  (38) 7000                              ret
 87
 88                                      ; Subroutine to display value on 7-seg display.  Pass value in R0.  Stack must be setup.
 89                                      sevseg:
 90 00BE  (2E) 5C08                              push r1
 91 00C0  (2E) 5C10                              push r2
 92 00C2  (2E) 5C18                              push r3
 93 00C4  (66) CC80 00EA                         loadimm r2,sevsegd
 94 00C8  (4A) 9440 000F                         andi r0,#000F,r1
 95 00CC  (04) 0851                              add r1,r2,r1
 96 00CE  (15) 2AC8                              loadbr r1,r3
 97 00D0  (51) A203 FFF0                         storebi r3,[#FFF0]
 98 00D4  (4A) 9440 00F0                         andi r0,#00F0,r1
 99 00D8  (23) 464B                              shr r1,r1,4
100 00DA  (04) 0851                              add r1,r2,r1
101 00DC  (15) 2AC8                              loadbr r1,r3
102 00DE  (51) A203 FFF1                         storebi r3,[#FFF1]
103 00E2  (30) 60C0                              pop r3
104 00E4  (30) 6080                              pop r2
105 00E6  (30) 6040                              pop r1
106 00E8  (38) 7000                              ret
107
108
109
110                                      sevsegd:
111                                              ;    0   1   2   3   4   5   6   7   8   9   a   b   c   d   e   f
112 00EA       81 F3 49 61 33 25 05 F1           db #81,#F3,#49,#61,#33,#25,#05,#F1,#01,#21,#11,#07,#8D,#43,#0D,#1D
112 00F2       01 21 11 07 8D 43 0D 1D


------------------------------------------------------------------------------------------------------------------------------------
Table of Label Values
------------------------------------------------------------------------------------------------------------------------------------
Label              Address
--------------------------
start              0000
lp1                0020
lp2                004C
disp               005A
displp             0070
dispdone           008E
mark               009A
mk2                00AC
sevseg             00BE
sevsegd            00EA

*** End of List File:test8.asm     Completed        2024-02-12 19:50:39.957201
