Atmel ATF1508AS Fitter Version 1.8.7.8 ,running Fri Dec 29 16:16:38 2023


fit1508 C:\IRCTRL.tt2 -CUPL -dev P1508C84 -JTAG ON


****** Initial fitting strategy and property ******
 Pla_in_file = IRCTRL.tt2
 Pla_out_file = IRCTRL.tt3
 Jedec_file = IRCTRL.jed
 Vector_file = IRCTRL.tmv
 verilog_file = IRCTRL.vt
 Time_file = 
 Log_file = IRCTRL.fit
 err_file = 
 Device_name = PLCC84
 Module_name = 
 Package_type = PLCC
 Preassign_file = 
 Property_file = 
 Sleep_mode = 
 Preassignment = 
 Security_mode = OFF
 Pin_keep_mode = ON
 Dedicated_input_clock = 
 Dedicated_input_reset = 
 Dedicated_input_oe = 
 supporter = CUPL
 optimize = ON
 Soft_buffer = 
 Xor_synthesis = OFF
 Foldback_logic =  on
 Expander = 
 Cascade_logic = OFF
 Dedicated_input = 
 Output_fast = OFF
 *******************************
 Power down pin 1 = OFF
 Power down pin 2 = OFF
 power_reset = OFF
 JTAG = ON
 TDI pullup = ON
 TMS pullup = ON
 MC_power = OFF
 Open_collector = OFF
 ITD0 = ON
 ITD1 = ON
 ITD2 = ON
 Fast_inlatch = off
 *******************************
---------------------------------------------------------
 Fitter_Pass 1, Preassign = KEEP, LOGIC_DOUBLING : OFF 
 ... 
 ## Warning : Placement fail 
---------------------------------------------------------
 Fitter_Pass 2, Preassign = KEEP, CASCADE_LOGIC : (TRY) 
 ... 

Performing global Output Enable pin assignments ...

Performing global pin assignments ...
--------------------------------------



Final global control pins assignment (if applicable)...
-------------------------------------------------------
D_CLK_IN assigned to pin  2
A_CLK_IN assigned to pin  83
RESET_IN assigned to pin  1



Performing input pin pre-assignments ...
------------------------------------
D_CLK_IN assigned to pin  2
A_CLK_IN assigned to pin  83
RESET_IN assigned to pin  1

Attempt to place floating signals ...
------------------------------------
XXL_231 is placed at feedback node 601 (MC 1)
XXL_225 is placed at feedback node 602 (MC 2)
IR2_OE is placed at pin 12 (MC 3)
XXL_229 is placed at feedback node 604 (MC 4)
H2L_OE is placed at pin 11 (MC 5)
IR2_LATCH is placed at pin 10 (MC 6)
XXL_222 is placed at feedback node 607 (MC 7)
DB_DIR is placed at pin 9 (MC 8)
XXL_228 is placed at feedback node 609 (MC 9)
XXL_226 is placed at feedback node 610 (MC 10)
ALU_WC is placed at pin 8 (MC 11)
XXL_223 is placed at feedback node 612 (MC 12)
DBH_OE is placed at pin 6 (MC 13)
ALU_FL is placed at pin 5 (MC 14)
ALU_OE is placed at pin 4 (MC 16)
SP_BBOE is placed at pin 22 (MC 17)
SHFT_WC is placed at pin 21 (MC 19)
SHFT_AR is placed at pin 20 (MC 21)
SP_ADOE is placed at pin 18 (MC 24)
SFT_DIR is placed at pin 17 (MC 25)
PC_BBOE is placed at pin 16 (MC 27)
XXL_227 is placed at feedback node 628 (MC 28)
RF_CWE is placed at pin 15 (MC 29)
XXL_224 is placed at feedback node 630 (MC 30)
XXL_232 is placed at feedback node 631 (MC 31)
TDI is placed at pin 14 (MC 32)
XXL_230 is placed at feedback node 632 (MC 32)
PC_MODE2 is placed at pin 31 (MC 35)
RF_FHZ is placed at pin 30 (MC 37)
H2L_DIR is placed at pin 29 (MC 38)
SHFT_OE is placed at pin 28 (MC 40)
MEM_L_EN is placed at pin 27 (MC 43)
MEM_H_EN is placed at pin 25 (MC 45)
ALU_CFLATCH is placed at pin 24 (MC 46)
TMS is placed at pin 23 (MC 48)
Com_Ctrl_221 is placed at foldback expander node 348 (MC 48)
ALU_FUNC2 is placed at pin 41 (MC 49)
ALU_FUNC0 is placed at pin 40 (MC 51)
PC_MODE0 is placed at pin 39 (MC 53)
B2A_OE is placed at pin 37 (MC 56)
MEM_AS is placed at pin 36 (MC 57)
PC_MODE1 is placed at pin 35 (MC 59)
SP_MODE0 is placed at pin 34 (MC 61)
SP_MODE1 is placed at pin 33 (MC 64)
Com_Ctrl_221 is placed at foldback expander node 364 (MC 64)
OPCB1 is placed at pin 44 (MC 65)
OPCB3 is placed at pin 45 (MC 67)
RF_BOE is placed at pin 46 (MC 69)
PC_ADOE is placed at pin 48 (MC 72)
MEM_RW is placed at pin 49 (MC 73)
DBL_OE is placed at pin 50 (MC 75)
IR1_LATCH is placed at pin 51 (MC 77)
ALU_FUNC1 is placed at pin 52 (MC 80)
OPCB4 is placed at pin 54 (MC 83)
OPCB2 is placed at pin 55 (MC 85)
OPCB0 is placed at pin 56 (MC 86)
OPCB5 is placed at pin 57 (MC 88)
OPCB6 is placed at pin 58 (MC 91)
AD0 is placed at pin 60 (MC 93)
CSM0 is placed at pin 61 (MC 94)
TCK is placed at pin 62 (MC 96)
Com_Ctrl_221 is placed at foldback expander node 396 (MC 96)
OPCSIZEHINT is placed at pin 63 (MC 97)
B_CLK_IN is placed at pin 64 (MC 99)
UNUSED is placed at pin 65 (MC 101)
JMPINST is placed at pin 67 (MC 104)
SHFT_INVERTCARRY is placed at pin 68 (MC 105)
HALT is placed at pin 69 (MC 107)
CSM1 is placed at pin 70 (MC 109)
TDO is placed at pin 71 (MC 112)
Com_Ctrl_221 is placed at foldback expander node 412 (MC 112)
C_CLK_IN is placed at pin 73 (MC 115)

                                                                                    
                                                                                    
                                                                                    
                                                                                    
                       I                                                            
                       R                D R  A                                      
                       2                _ E  _                                      
                     H _  D A   D A A   C S  C                                      
                     2 L  B L   B L L   L E  L                                      
                     L A  _ U   H U U   K T  K                                      
                     _ T  D _ G _ _ _ V _ _  _ G       V                            
                     O C  I W N O F O C I I  I N       C                            
                     E H  R C D E L E C N N  N D       C                            
                    -------------------------------------------                     
                   / 11   9   7   5   3   1  83  81  79  77  75 \                  
                  /    10   8   6   4   2  84  82  80  78  76    \                 
          IR2_OE | 12                    (*)                   74 |                 
             VCC | 13                                          73 | C_CLK_IN        
             TDI | 14                                          72 | GND             
          RF_CWE | 15                                          71 | TDO             
         PC_BBOE | 16                                          70 | CSM1            
         SFT_DIR | 17                                          69 | HALT            
         SP_ADOE | 18                                          68 | SHFT_INVERTCARRY
             GND | 19                                          67 | JMPINST         
         SHFT_AR | 20                                          66 | VCC             
         SHFT_WC | 21                                          65 | UNUSED          
         SP_BBOE | 22                 ATF1508                  64 | B_CLK_IN        
             TMS | 23               84-Lead PLCC               63 | OPCSIZEHINT     
     ALU_CFLATCH | 24                                          62 | TCK             
        MEM_H_EN | 25                                          61 | CSM0            
             VCC | 26                                          60 | AD0             
        MEM_L_EN | 27                                          59 | GND             
         SHFT_OE | 28                                          58 | OPCB6           
         H2L_DIR | 29                                          57 | OPCB5           
          RF_FHZ | 30                                          56 | OPCB0           
        PC_MODE2 | 31                                          55 | OPCB2           
             GND | 32                                          54 | OPCB4           
                  \     34  36  38  40  42  44  46  48  50  52   /                 
                   \  33  35  37  39  41  43  45  47  49  51  53/                  
              	    --------------------------------------------                     
                      S S P M B V P A A G V O O R G P M D I A V                     
                      P P C E 2 C C L L N C P P F N C E B R L C                     
                      _ _ _ M A C _ U U D C C C _ D _ M L 1 U C                     
                      M M M _ _   M _ _     B B B   A _ _ _ _                       
                      O O O A O   O F F     1 3 O   D R O L F                       
                      D D D S E   D U U         E   O W E A U                       
                      E E E       E N N             E     T N                       
                      1 0 1       0 C C                   C C                       
                                    0 2                   H 1                       



VCC = Supply Voltage pin which must be connected to (5.0V or 3.0V)

GND = GND pin which must be connected to ground

TMS,TDI,TDO,TDI = JTAG pins which must reserved for the JTAG interface

NC = Unused I/O pins which must be unconnected on the board

Universal-Interconnect-Multiplexer assignments
------------------------------------------------
FanIn assignment for block A [12]
{
AD0,
CSM0,CSM1,
OPCB0,OPCB1,OPCB3,OPCB2,OPCB5,OPCB6,OPCB4,
RESET_IN,
XXL_222,
}
Multiplexer assignment for block A
XXL_222			(MC1	FB)  : MUX 0		Ref (A7fb)
OPCB0			(MC11	P)   : MUX 1		Ref (F86p)
AD0			(MC12	P)   : MUX 4		Ref (F93p)
OPCB1			(MC7	P)   : MUX 7		Ref (E65p)
CSM0			(MC2	P)   : MUX 8		Ref (F94p)
OPCB3			(MC9	P)   : MUX 11		Ref (E67p)
OPCB2			(MC8	P)   : MUX 13		Ref (F85p)
RESET_IN		(MC6	FB)  : MUX 14		Ref (GCLR)
OPCB5			(MC5	P)   : MUX 21		Ref (F88p)
CSM1			(MC3	P)   : MUX 22		Ref (G109p)
OPCB6			(MC10	P)   : MUX 24		Ref (F91p)
OPCB4			(MC4	P)   : MUX 27		Ref (F83p)

FanIn assignment for block B [13]
{
CSM1,CSM0,
OPCB4,OPCB5,OPCB0,OPCB2,OPCB3,OPCB6,OPCB1,
RESET_IN,
XXL_230,XXL_232,XXL_231,
}
Multiplexer assignment for block B
OPCB4			(MC6	P)   : MUX 1		Ref (F83p)
RESET_IN		(MC8	FB)  : MUX 2		Ref (GCLR)
OPCB5			(MC7	P)   : MUX 3		Ref (F88p)
CSM1			(MC5	P)   : MUX 4		Ref (G109p)
XXL_230			(MC3	FB)  : MUX 7		Ref (B32fb)
CSM0			(MC4	P)   : MUX 8		Ref (F94p)
OPCB0			(MC13	P)   : MUX 11		Ref (F86p)
XXL_232			(MC2	FB)  : MUX 25		Ref (B31fb)
XXL_231			(MC1	FB)  : MUX 26		Ref (A1fb)
OPCB2			(MC10	P)   : MUX 31		Ref (F85p)
OPCB3			(MC11	P)   : MUX 33		Ref (E67p)
OPCB6			(MC12	P)   : MUX 34		Ref (F91p)
OPCB1			(MC9	P)   : MUX 39		Ref (E65p)

FanIn assignment for block C [15]
{
CSM0,CSM1,
HALT,
OPCB5,OPCB1,OPCB0,OPCB4,OPCB3,OPCB6,OPCB2,
RESET_IN,
XXL_227,XXL_225,XXL_228,XXL_226,
}
Multiplexer assignment for block C
OPCB5			(MC9	P)   : MUX 3		Ref (F88p)
OPCB1			(MC11	P)   : MUX 7		Ref (E65p)
CSM0			(MC5	P)   : MUX 8		Ref (F94p)
XXL_227			(MC4	FB)  : MUX 9		Ref (B28fb)
XXL_225			(MC1	FB)  : MUX 10		Ref (A2fb)
OPCB0			(MC15	P)   : MUX 11		Ref (F86p)
OPCB4			(MC8	P)   : MUX 13		Ref (F83p)
OPCB3			(MC13	P)   : MUX 15		Ref (E67p)
OPCB6			(MC14	P)   : MUX 16		Ref (F91p)
XXL_228			(MC2	FB)  : MUX 17		Ref (A9fb)
CSM1			(MC7	P)   : MUX 22		Ref (G109p)
HALT			(MC6	P)   : MUX 28		Ref (G107p)
XXL_226			(MC3	FB)  : MUX 29		Ref (A10fb)
OPCB2			(MC12	P)   : MUX 31		Ref (F85p)
RESET_IN		(MC10	FB)  : MUX 34		Ref (GCLR)

FanIn assignment for block D [12]
{
CSM0,CSM1,
HALT,
OPCB2,OPCB3,OPCB1,OPCB0,OPCB5,OPCB4,OPCB6,
RESET_IN,
XXL_224,
}
Multiplexer assignment for block D
OPCB2			(MC9	P)   : MUX 5		Ref (F85p)
HALT			(MC3	P)   : MUX 6		Ref (G107p)
CSM0			(MC2	P)   : MUX 8		Ref (F94p)
OPCB3			(MC10	P)   : MUX 11		Ref (E67p)
OPCB1			(MC8	P)   : MUX 13		Ref (E65p)
RESET_IN		(MC7	FB)  : MUX 14		Ref (GCLR)
OPCB0			(MC12	P)   : MUX 19		Ref (F86p)
OPCB5			(MC6	P)   : MUX 21		Ref (F88p)
CSM1			(MC4	P)   : MUX 22		Ref (G109p)
OPCB4			(MC5	P)   : MUX 27		Ref (F83p)
OPCB6			(MC11	P)   : MUX 34		Ref (F91p)
XXL_224			(MC1	FB)  : MUX 37		Ref (B30fb)

FanIn assignment for block E [12]
{
CSM0,CSM1,
OPCB4,OPCB2,OPCB3,OPCB1,OPCB0,OPCB5,OPCB6,
RESET_IN,
XXL_229,XXL_223,
}
Multiplexer assignment for block E
OPCB4			(MC5	P)   : MUX 1		Ref (F83p)
RESET_IN		(MC7	FB)  : MUX 2		Ref (GCLR)
OPCB2			(MC9	P)   : MUX 5		Ref (F85p)
OPCB3			(MC10	P)   : MUX 11		Ref (E67p)
OPCB1			(MC8	P)   : MUX 13		Ref (E65p)
CSM0			(MC3	P)   : MUX 14		Ref (F94p)
OPCB0			(MC12	P)   : MUX 19		Ref (F86p)
XXL_229			(MC1	FB)  : MUX 20		Ref (A4fb)
OPCB5			(MC6	P)   : MUX 21		Ref (F88p)
CSM1			(MC4	P)   : MUX 22		Ref (G109p)
OPCB6			(MC11	P)   : MUX 34		Ref (F91p)
XXL_223			(MC2	FB)  : MUX 37		Ref (A12fb)

FanIn assignment for block F [7]
{
CSM0,CSM1,
HALT,
OPCB4,OPCB5,OPCSIZEHINT,
RESET_IN,
}
Multiplexer assignment for block F
OPCB4			(MC4	P)   : MUX 1		Ref (F83p)
HALT			(MC2	P)   : MUX 6		Ref (G107p)
CSM0			(MC1	P)   : MUX 8		Ref (F94p)
RESET_IN		(MC6	FB)  : MUX 14		Ref (GCLR)
OPCB5			(MC5	P)   : MUX 21		Ref (F88p)
CSM1			(MC3	P)   : MUX 22		Ref (G109p)
OPCSIZEHINT		(MC7	P)   : MUX 27		Ref (G97p)

FanIn assignment for block G [14]
{
B_CLK_IN,
CSM0,CSM1,C_CLK_IN,
HALT,
OPCB0,OPCB5,OPCSIZEHINT,OPCB3,OPCB2,OPCB4,OPCB6,OPCB1,
RESET_IN,
}
Multiplexer assignment for block G
OPCB0			(MC11	P)   : MUX 1		Ref (F86p)
OPCB5			(MC5	P)   : MUX 3		Ref (F88p)
B_CLK_IN		(MC13	P)   : MUX 5		Ref (G99p)
HALT			(MC2	P)   : MUX 6		Ref (G107p)
OPCSIZEHINT		(MC12	P)   : MUX 7		Ref (G97p)
CSM0			(MC1	P)   : MUX 8		Ref (F94p)
OPCB3			(MC9	P)   : MUX 11		Ref (E67p)
OPCB2			(MC8	P)   : MUX 13		Ref (F85p)
RESET_IN		(MC6	FB)  : MUX 14		Ref (GCLR)
OPCB4			(MC4	P)   : MUX 21		Ref (F83p)
CSM1			(MC3	P)   : MUX 22		Ref (G109p)
C_CLK_IN		(MC14	P)   : MUX 27		Ref (H115p)
OPCB6			(MC10	P)   : MUX 34		Ref (F91p)
OPCB1			(MC7	P)   : MUX 39		Ref (E65p)

Creating JEDEC file C:\IRCTRL.jed ...

PLCC84 programmed logic:
-----------------------------------
!ALU_CFLATCH.D = ((!CSM0.Q & CSM1.Q & !OPCB3 & OPCB4 & !OPCB5 & !OPCB6 & OPCB0 & OPCB1 & !OPCB2)
	# (!CSM0.Q & CSM1.Q & !OPCB3 & !OPCB4 & OPCB5 & !OPCB6));

!ALU_FL.D = ((!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB6)
	# XXL_222
	# (!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB0));

!ALU_FUNC0.D = ((!OPCB1 & !OPCB2 & !OPCB3)
	# (!OPCB1 & !OPCB5));

!ALU_FUNC1.D = ((!OPCB2 & !OPCB5)
	# (!OPCB2 & !OPCB1 & !OPCB3));

!ALU_FUNC2.D = ((!OPCB3 & !OPCB5)
	# (!OPCB3 & !OPCB1 & !OPCB2));

!ALU_OE.D = ((!CSM0.Q & CSM1.Q & !OPCB4 & OPCB1 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB2 & !OPCB3 & !OPCB1 & OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB2 & !OPCB3 & !OPCB1 & !OPCB5 & OPCB0)
	# (!CSM0.Q & CSM1.Q & OPCB4 & !OPCB2 & !OPCB3 & !OPCB1 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB2 & !OPCB3 & OPCB1 & OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB3 & OPCB1 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB3 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB2 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB2 & OPCB3 & !OPCB1 & !OPCB6));

!ALU_WC.D = ((!CSM0.Q & CSM1.Q & OPCB0 & OPCB1 & !OPCB2 & !OPCB3 & !OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & !OPCB4 & !OPCB5));

!B2A_OE.D = (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5);

CSM0.D = ((!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5)
	# (!CSM0.Q & !CSM1.Q & OPCSIZEHINT));

CSM1.D = ((CSM1.Q & !CSM0.Q & !OPCB4 & !OPCB5)
	# (!CSM1.Q & CSM0.Q)
	# (!CSM1.Q & !OPCSIZEHINT));

!DBH_OE.D = ((!CSM0.Q & CSM1.Q & !OPCB0 & OPCB1 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & OPCB2)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6)
	# (CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB2));

!DBL_OE.D = (XXL_223
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!DB_DIR.D = ((!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & !OPCB3 & OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & OPCB1 & OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!H2L_DIR.D = ((!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & !OPCB2 & !OPCB3 & OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & !OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!H2L_OE.D = ((AD0 & !CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5)
	# (AD0 & !CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!HALT.D = (!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & !OPCB2 & !OPCB3 & !OPCB4 & !OPCB5 & !OPCB6);

!IR1_LATCH.D = (!CSM0.Q & !CSM1.Q);

!IR2_LATCH.D = ((CSM0.Q & !CSM1.Q)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5 & !OPCB6));

!IR2_OE.D = ((!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB6)
	# (CSM0.Q & CSM1.Q & OPCB4 & OPCB5 & !OPCB1 & !OPCB2 & OPCB3 & !OPCB0)
	# (CSM0.Q & CSM1.Q & OPCB4 & OPCB5 & !OPCB1 & !OPCB2 & OPCB3 & OPCB6));

!JMPINST.D = ((!CSM0.Q & CSM1.Q & OPCB3 & OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!MEM_AS.D = ((!CSM0.Q & OPCB1 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & !OPCB0 & OPCB2)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6)
	# XXL_224
	# !CSM1.Q);

!MEM_H_EN.D = (XXL_226
	# XXL_225);

!MEM_L_EN.D = (XXL_228
	# XXL_227);

!MEM_RW.D = ((!CSM0.Q & CSM1.Q & !OPCB1 & OPCB2 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & !OPCB3 & OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & OPCB1 & OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!PC_ADOE.D = (!CSM1.Q
	# (!CSM0.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!PC_BBOE.D = ((!CSM0.Q & CSM1.Q & !OPCB1 & OPCB2 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5 & OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & OPCB0));

PC_MODE0.D = (!CSM1.Q
	# (!CSM0.Q & OPCB3 & !OPCB4 & OPCB5 & OPCB6)
	# (CSM0.Q & OPCB3 & OPCB4 & OPCB5 & OPCB6 & OPCB0 & !OPCB1 & !OPCB2));

PC_MODE1.D = ((CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5 & !OPCB0)
	# (CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5 & OPCB6)
	# (CSM0.Q & CSM1.Q & !OPCB1 & OPCB2 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0));

PC_MODE2.D = (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6);

!RF_BOE.D = XXL_229;

!RF_CWE.D = (XXL_231
	# XXL_230);

!RF_FHZ.D = ((!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & OPCB4 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6));

!SFT_DIR.D = ((!CSM0.Q & CSM1.Q & !OPCB0 & OPCB1 & !OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & !OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & !OPCB6));

!SHFT_AR.D = (!CSM0.Q & CSM1.Q & OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & !OPCB6);

!SHFT_INVERTCARRY.D = (!CSM0.Q & CSM1.Q & OPCB0 & OPCB1 & !OPCB2 & !OPCB3 & OPCB4 & !OPCB5 & !OPCB6);

!SHFT_OE.D = (!CSM0.Q & CSM1.Q & !OPCB3 & !OPCB4 & OPCB5 & !OPCB6);

!SP_ADOE.D = XXL_232;

!SHFT_WC.D = (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & !OPCB4 & OPCB5 & !OPCB6);

!SP_MODE0.D = ((!CSM0.Q & CSM1.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & !OPCB2 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & OPCB1 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & OPCB2 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & OPCB6 & !OPCB2));

!SP_BBOE.D = (!CSM0.Q & CSM1.Q & !OPCB0 & OPCB1 & !OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6);

!SP_MODE1.D = ((!CSM0.Q & CSM1.Q & OPCB1 & !OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & OPCB0)
	# (!CSM0.Q & CSM1.Q & OPCB1 & OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & OPCB2 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5 & OPCB6));

UNUSED = ((B_CLK_IN & HALT.Q)
	# C_CLK_IN);

!Com_Ctrl_221 = (HALT.Q & RESET_IN);

XXL_222 = ((!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB2)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB3 & OPCB2 & !OPCB6 & !OPCB1)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & OPCB3 & !OPCB2 & !OPCB6 & OPCB1 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB5 & !OPCB3 & !OPCB2 & !OPCB6 & OPCB1 & !OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB3));

XXL_223 = ((!CSM0.Q & CSM1.Q & !OPCB0 & OPCB1 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & OPCB2)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5 & !AD0)
	# (!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6 & !AD0)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5)
	# (CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB2));

XXL_224 = ((CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0 & !OPCB2)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB6 & !OPCB0 & OPCB2)
	# (!CSM0.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & !OPCB0 & !OPCB2)
	# (!CSM0.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & OPCB6 & !OPCB2)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5));

XXL_225 = ((!CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5 & AD0)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5 & !OPCB0)
	# (CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB0 & !OPCB2)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB6 & !OPCB0 & OPCB2)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6 & !OPCB0));

XXL_226 = ((!CSM0.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & !OPCB2 & OPCB6)
	# !CSM1.Q
	# (!CSM0.Q & OPCB1 & OPCB3 & !OPCB4 & OPCB5 & !OPCB0 & OPCB2 & !OPCB6)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6 & AD0)
	# (!CSM0.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & !OPCB0 & !OPCB2));

XXL_227 = ((CSM0.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6 & !OPCB2)
	# (!CSM0.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & !OPCB6 & OPCB2)
	# (!CSM0.Q & !OPCB0 & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & !OPCB2)
	# (!CSM0.Q & !OPCB1 & OPCB3 & OPCB4 & OPCB5 & OPCB6 & !OPCB2)
	# (!CSM0.Q & !OPCB0 & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5));

XXL_228 = ((!CSM0.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6 & !AD0)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & OPCB4 & !OPCB5 & !AD0)
	# (!CSM0.Q & OPCB1 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6 & !OPCB0 & OPCB2)
	# (!CSM0.Q & !OPCB1 & !OPCB3 & !OPCB4 & OPCB5 & OPCB6 & !OPCB0)
	# !CSM1.Q);

XXL_229 = ((!CSM0.Q & CSM1.Q & !OPCB6 & !OPCB4 & OPCB0 & !OPCB2 & OPCB1)
	# (CSM0.Q & CSM1.Q & !OPCB6 & OPCB4 & !OPCB3 & !OPCB0 & OPCB2 & !OPCB1 & OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB6 & !OPCB5)
	# (!CSM0.Q & CSM1.Q & !OPCB6 & !OPCB4 & !OPCB0 & OPCB2)
	# (!CSM0.Q & CSM1.Q & !OPCB6 & !OPCB4 & !OPCB3));

XXL_230 = ((!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB3)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB6 & !OPCB0 & !OPCB2 & OPCB1)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB3 & !OPCB0 & OPCB2)
	# (CSM0.Q & CSM1.Q & OPCB4 & OPCB5 & !OPCB6 & !OPCB3 & !OPCB0 & !OPCB2 & !OPCB1)
	# (!CSM0.Q & CSM1.Q & !OPCB4 & !OPCB5 & OPCB6));

XXL_231 = ((!CSM0.Q & CSM1.Q & !OPCB3 & OPCB2 & !OPCB1 & !OPCB4)
	# (!CSM0.Q & CSM1.Q & OPCB2 & !OPCB1 & !OPCB4 & !OPCB6)
	# (!CSM0.Q & CSM1.Q & OPCB5 & !OPCB3 & !OPCB4 & !OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB5 & !OPCB4 & OPCB0)
	# (!CSM0.Q & CSM1.Q & !OPCB5 & !OPCB3 & OPCB2 & !OPCB1));

XXL_232 = ((!CSM0.Q & CSM1.Q & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5 & OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB2 & OPCB3 & OPCB4 & OPCB5)
	# (CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & !OPCB2 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & OPCB1 & OPCB2 & OPCB3 & !OPCB4 & OPCB5 & !OPCB6)
	# (!CSM0.Q & CSM1.Q & !OPCB0 & !OPCB1 & OPCB2 & !OPCB3 & OPCB4 & OPCB5 & !OPCB6));

ALU_CFLATCH.C = A_CLK_IN;

ALU_CFLATCH.AP = !RESET_IN;

ALU_FL.C = A_CLK_IN;

ALU_FL.AP = !RESET_IN;

ALU_FUNC0.C = A_CLK_IN;

ALU_FUNC0.AR = !RESET_IN;

ALU_FUNC1.C = A_CLK_IN;

ALU_FUNC1.AR = !RESET_IN;

ALU_FUNC2.C = A_CLK_IN;

ALU_FUNC2.AR = !RESET_IN;

ALU_OE.C = A_CLK_IN;

ALU_OE.AP = !RESET_IN;

ALU_WC.C = A_CLK_IN;

ALU_WC.AP = !RESET_IN;

B2A_OE.C = A_CLK_IN;

B2A_OE.AP = !RESET_IN;

CSM0.C = D_CLK_IN;

CSM0.AR = Com_Ctrl_221;

CSM1.C = D_CLK_IN;

CSM1.AR = Com_Ctrl_221;

DBH_OE.C = A_CLK_IN;

DBH_OE.AP = !RESET_IN;

DBL_OE.C = A_CLK_IN;

DBL_OE.AP = !RESET_IN;

DB_DIR.C = A_CLK_IN;

DB_DIR.AP = !RESET_IN;

H2L_DIR.C = A_CLK_IN;

H2L_DIR.AP = !RESET_IN;

H2L_OE.C = A_CLK_IN;

H2L_OE.AP = !RESET_IN;

HALT.C = A_CLK_IN;

HALT.AP = !RESET_IN;

IR1_LATCH.C = A_CLK_IN;

IR1_LATCH.AP = !RESET_IN;

IR2_LATCH.C = A_CLK_IN;

IR2_LATCH.AP = !RESET_IN;

IR2_OE.C = A_CLK_IN;

IR2_OE.AP = !RESET_IN;

JMPINST.C = A_CLK_IN;

JMPINST.AP = !RESET_IN;

MEM_AS.C = A_CLK_IN;

MEM_AS.AP = !RESET_IN;

MEM_H_EN.C = A_CLK_IN;

MEM_H_EN.AP = !RESET_IN;

MEM_L_EN.C = A_CLK_IN;

MEM_L_EN.AP = !RESET_IN;

MEM_RW.C = A_CLK_IN;

MEM_RW.AP = !RESET_IN;

PC_ADOE.C = A_CLK_IN;

PC_ADOE.AP = !RESET_IN;

PC_BBOE.C = A_CLK_IN;

PC_BBOE.AP = !RESET_IN;

PC_MODE0.C = A_CLK_IN;

PC_MODE0.AR = Com_Ctrl_221;

PC_MODE1.C = A_CLK_IN;

PC_MODE1.AR = Com_Ctrl_221;

PC_MODE2.C = A_CLK_IN;

PC_MODE2.AR = Com_Ctrl_221;

RF_BOE.C = A_CLK_IN;

RF_BOE.AP = !RESET_IN;

RF_CWE.C = A_CLK_IN;

RF_CWE.AP = !RESET_IN;

RF_FHZ.C = A_CLK_IN;

RF_FHZ.AP = !RESET_IN;

SFT_DIR.C = A_CLK_IN;

SFT_DIR.AP = !RESET_IN;

SHFT_AR.C = A_CLK_IN;

SHFT_AR.AP = !RESET_IN;

SHFT_INVERTCARRY.C = A_CLK_IN;

SHFT_INVERTCARRY.AP = !RESET_IN;

SHFT_OE.C = A_CLK_IN;

SHFT_OE.AP = !RESET_IN;

SP_ADOE.C = A_CLK_IN;

SP_ADOE.AP = !RESET_IN;

SHFT_WC.C = A_CLK_IN;

SHFT_WC.AP = !RESET_IN;

SP_MODE0.C = A_CLK_IN;

SP_MODE0.AR = !RESET_IN;

SP_BBOE.C = A_CLK_IN;

SP_BBOE.AP = !RESET_IN;

SP_MODE1.C = A_CLK_IN;

SP_MODE1.AR = !RESET_IN;


PLCC84 Pin/Node Placement:
------------------------------------
Pin 1  = RESET_IN;
Pin 2  = D_CLK_IN;
Pin 4  = ALU_OE; /* MC 16 */
Pin 5  = ALU_FL; /* MC 14 */
Pin 6  = DBH_OE; /* MC 13 */
Pin 8  = ALU_WC; /* MC 11 */
Pin 9  = DB_DIR; /* MC 8 */
Pin 10 = IR2_LATCH; /* MC  6 */
Pin 11 = H2L_OE; /* MC  5 */
Pin 12 = IR2_OE; /* MC  3 */
Pin 14 = TDI; /* MC 32 */ 
Pin 15 = RF_CWE; /* MC 29 */ 
Pin 16 = PC_BBOE; /* MC 27 */ 
Pin 17 = SFT_DIR; /* MC 25 */ 
Pin 18 = SP_ADOE; /* MC 24 */ 
Pin 20 = SHFT_AR; /* MC 21 */ 
Pin 21 = SHFT_WC; /* MC 19 */ 
Pin 22 = SP_BBOE; /* MC 17 */ 
Pin 23 = TMS; /* MC 48 */ 
Pin 24 = ALU_CFLATCH; /* MC 46 */ 
Pin 25 = MEM_H_EN; /* MC 45 */ 
Pin 27 = MEM_L_EN; /* MC 43 */ 
Pin 28 = SHFT_OE; /* MC 40 */ 
Pin 29 = H2L_DIR; /* MC 38 */ 
Pin 30 = RF_FHZ; /* MC 37 */ 
Pin 31 = PC_MODE2; /* MC 35 */ 
Pin 33 = SP_MODE1; /* MC 64 */ 
Pin 34 = SP_MODE0; /* MC 61 */ 
Pin 35 = PC_MODE1; /* MC 59 */ 
Pin 36 = MEM_AS; /* MC 57 */ 
Pin 37 = B2A_OE; /* MC 56 */ 
Pin 39 = PC_MODE0; /* MC 53 */ 
Pin 40 = ALU_FUNC0; /* MC 51 */ 
Pin 41 = ALU_FUNC2; /* MC 49 */ 
Pin 44 = OPCB1; /* MC 65 */ 
Pin 45 = OPCB3; /* MC 67 */ 
Pin 46 = RF_BOE; /* MC 69 */ 
Pin 48 = PC_ADOE; /* MC 72 */ 
Pin 49 = MEM_RW; /* MC 73 */ 
Pin 50 = DBL_OE; /* MC 75 */ 
Pin 51 = IR1_LATCH; /* MC 77 */ 
Pin 52 = ALU_FUNC1; /* MC 80 */ 
Pin 54 = OPCB4; /* MC 83 */ 
Pin 55 = OPCB2; /* MC 85 */ 
Pin 56 = OPCB0; /* MC 86 */ 
Pin 57 = OPCB5; /* MC 88 */ 
Pin 58 = OPCB6; /* MC 91 */ 
Pin 60 = AD0; /* MC 93 */ 
Pin 61 = CSM0; /* MC 94 */ 
Pin 62 = TCK; /* MC 96 */ 
Pin 63 = OPCSIZEHINT; /* MC 97 */ 
Pin 64 = B_CLK_IN; /* MC 99 */ 
Pin 65 = UNUSED; /* MC 101 */ 
Pin 67 = JMPINST; /* MC 104 */ 
Pin 68 = SHFT_INVERTCARRY; /* MC 105 */ 
Pin 69 = HALT; /* MC 107 */ 
Pin 70 = CSM1; /* MC 109 */ 
Pin 71 = TDO; /* MC 112 */ 
Pin 73 = C_CLK_IN; /* MC 115 */ 
Pin 83 = A_CLK_IN;
PINNODE 348 = Com_Ctrl_221; /* MC 48 Foldback */
PINNODE 364 = Com_Ctrl_221; /* MC 64 Foldback */
PINNODE 396 = Com_Ctrl_221; /* MC 96 Foldback */
PINNODE 412 = Com_Ctrl_221; /* MC 112 Foldback */
PINNODE 601 = XXL_231; /* MC 1 Feedback */
PINNODE 602 = XXL_225; /* MC 2 Feedback */
PINNODE 604 = XXL_229; /* MC 4 Feedback */
PINNODE 607 = XXL_222; /* MC 7 Feedback */
PINNODE 609 = XXL_228; /* MC 9 Feedback */
PINNODE 610 = XXL_226; /* MC 10 Feedback */
PINNODE 612 = XXL_223; /* MC 12 Feedback */
PINNODE 628 = XXL_227; /* MC 28 Feedback */
PINNODE 630 = XXL_224; /* MC 30 Feedback */
PINNODE 631 = XXL_232; /* MC 31 Feedback */
PINNODE 632 = XXL_230; /* MC 32 Feedback */

** Resource Usage **


DCERP Field = Summary of Allocations.
|||||
|||||_Preset [p,-]       ==  p = PT preset, - No Preset.
||||
||||__Reset [g,r,-]      ==  g= Global AR, r = PT reset, - No reset.
|||
|||___Clock Enable [e,-] ==  e = Product Term, - always enabled, - none.
||
||____Clock [c,g,-],     ==  c = Product term, g = Global term, - No Clock.
|
|_____Type [C,D,L,T],    ==  Register type C= combin, D=dff, L=latch, T=tff.

For input only = INPUT.

MCell Pin# Oe   PinDrive         DCERP  FBDrive  DCERP  Foldback     CascadeOut     TotPT output_slew
MC1   0         --                      XXL_231  C----  NA           --             5     slow
MC2   0         --                      XXL_225  C----  NA           --             5     slow
MC3   12   on   IR2_OE           Dg--p  --              --           --             4     slow
MC4   0         --                      XXL_229  C----  NA           --             5     slow
MC5   11   on   H2L_OE           Dg--p  --              --           --             3     slow
MC6   10   on   IR2_LATCH        Dg--p  --              --           --             3     slow
MC7   0         --                      XXL_222  C----  NA           --             5     slow
MC8   9    on   DB_DIR           Dg--p  --              --           --             4     slow
MC9   0         --                      XXL_228  C----  NA           --             5     slow
MC10  0         --                      XXL_226  C----  NA           --             5     slow
MC11  8    on   ALU_WC           Dg--p  --              --           --             3     slow
MC12  0         --                      XXL_223  C----  NA           --             5     slow
MC13  6    on   DBH_OE           Dg--p  --              NA           --             5     slow
MC14  5    on   ALU_FL           Dg--p  --              --           --             4     slow
MC15  0         --                      --              NA           -> ALU_OE      5     slow
MC16  4    on   ALU_OE           Dg--p  --              NA           --             5     slow
MC17  22   on   SP_BBOE          Dg--p  --              --           --             2     slow
MC18  0         --                      --              --           --             0     slow
MC19  21   on   SHFT_WC          Dg--p  --              --           --             2     slow
MC20  0         --                      --              --           --             0     slow
MC21  20   on   SHFT_AR          Dg--p  --              --           --             2     slow
MC22  0         --                      --              --           --             0     slow
MC23  0         --                      --              --           --             0     slow
MC24  18   on   SP_ADOE          Dg--p  --              --           --             2     slow
MC25  17   on   SFT_DIR          Dg--p  --              --           --             3     slow
MC26  0         --                      --              --           --             0     slow
MC27  16   on   PC_BBOE          Dg--p  --              --           --             4     slow
MC28  0         --                      XXL_227  C----  NA           --             5     slow
MC29  15   on   RF_CWE           Dg--p  --              --           --             3     slow
MC30  0         --                      XXL_224  C----  NA           --             5     slow
MC31  0         --                      XXL_232  C----  NA           --             5     slow
MC32  14   --   TDI              INPUT  XXL_230  C----  NA           --             5     slow
MC33  0         --                      --              --           --             0     slow
MC34  0         --                      --              --           --             0     slow
MC35  31   on   PC_MODE2         Dg-r-  --              --           --             2     slow
MC36  0         --                      --              --           --             0     slow
MC37  30   on   RF_FHZ           Dg--p  --              --           --             3     slow
MC38  29   on   H2L_DIR          Dg--p  --              --           --             3     slow
MC39  0         --                      --              --           --             0     slow
MC40  28   on   SHFT_OE          Dg--p  --              --           --             2     slow
MC41  0         --                      --              --           --             0     slow
MC42  0         --                      --              --           --             0     slow
MC43  27   on   MEM_L_EN         Dg--p  --              --           --             3     slow
MC44  0         --                      --              --           --             0     slow
MC45  25   on   MEM_H_EN         Dg--p  --              --           --             3     slow
MC46  24   on   ALU_CFLATCH      Dg--p  --              --           --             3     slow
MC47  0         --                      --              --           --             0     slow
MC48  23   --   TMS              INPUT  --              Com_Ctrl_221 --             1     slow
MC49  41   on   ALU_FUNC2        Dg-g-  --              --           --             2     slow
MC50  0         --                      --              --           --             0     slow
MC51  40   on   ALU_FUNC0        Dg-g-  --              --           --             2     slow
MC52  0         --                      --              --           --             0     slow
MC53  39   on   PC_MODE0         Dg-r-  --              --           --             4     slow
MC54  0         --                      --              --           --             0     slow
MC55  0         --                      --              --           --             0     slow
MC56  37   on   B2A_OE           Dg--p  --              --           --             2     slow
MC57  36   on   MEM_AS           Dg--p  --              NA           --             5     slow
MC58  0         --                      --              --           --             0     slow
MC59  35   on   PC_MODE1         Dg-r-  --              --           --             4     slow
MC60  0         --                      --              --           --             0     slow
MC61  34   on   SP_MODE0         Dg-g-  --              --           --             4     slow
MC62  0         --                      --              --           --             0     slow
MC63  0         --                      --              --           --             0     slow
MC64  33   on   SP_MODE1         Dg-g-  --              Com_Ctrl_221 --             5     slow
MC65  44   --   OPCB1            INPUT  --              --           --             0     slow
MC66  0         --                      --              --           --             0     slow
MC67  45   --   OPCB3            INPUT  --              --           --             0     slow
MC68  0         --                      --              --           --             0     slow
MC69  46   on   RF_BOE           Dg--p  --              --           --             2     slow
MC70  0         --                      --              --           --             0     slow
MC71  0         --                      --              --           --             0     slow
MC72  48   on   PC_ADOE          Dg--p  --              --           --             3     slow
MC73  49   on   MEM_RW           Dg--p  --              NA           --             5     slow
MC74  0         --                      --              --           --             0     slow
MC75  50   on   DBL_OE           Dg--p  --              --           --             3     slow
MC76  0         --                      --              --           --             0     slow
MC77  51   on   IR1_LATCH        Dg--p  --              --           --             2     slow
MC78  0         --                      --              --           --             0     slow
MC79  0         --                      --              --           --             0     slow
MC80  52   on   ALU_FUNC1        Dg-g-  --              --           --             2     slow
MC81  0         --                      --              --           --             0     slow
MC82  0         --                      --              --           --             0     slow
MC83  54   --   OPCB4            INPUT  --              --           --             0     slow
MC84  0         --                      --              --           --             0     slow
MC85  55   --   OPCB2            INPUT  --              --           --             0     slow
MC86  56   --   OPCB0            INPUT  --              --           --             0     slow
MC87  0         --                      --              --           --             0     slow
MC88  57   --   OPCB5            INPUT  --              --           --             0     slow
MC89  0         --                      --              --           --             0     slow
MC90  0         --                      --              --           --             0     slow
MC91  58   --   OPCB6            INPUT  --              --           --             0     slow
MC92  0         --                      --              --           --             0     slow
MC93  60   --   AD0              INPUT  --              --           --             0     slow
MC94  61   on   CSM0             Dg-r-  --              --           --             3     slow
MC95  0         --                      --              --           --             0     slow
MC96  62   --   TCK              INPUT  --              Com_Ctrl_221 --             1     slow
MC97  63   --   OPCSIZEHINT      INPUT  --              --           --             0     slow
MC98  0         --                      --              --           --             0     slow
MC99  64   --   B_CLK_IN         INPUT  --              --           --             0     slow
MC100 0         --                      --              --           --             0     slow
MC101 65   on   UNUSED           C----  --              --           --             2     slow
MC102 0         --                      --              --           --             0     slow
MC103 0         --                      --              --           --             0     slow
MC104 67   on   JMPINST          Dg--p  --              --           --             3     slow
MC105 68   on   SHFT_INVERTCARRY Dg--p  --              --           --             2     slow
MC106 0         --                      --              --           --             0     slow
MC107 69   on   HALT             Dg--p  --              --           --             2     slow
MC108 0         --                      --              --           --             0     slow
MC109 70   on   CSM1             Dg-r-  --              --           --             4     slow
MC110 0         --                      --              --           --             0     slow
MC111 0         --                      --              --           --             0     slow
MC112 71   --   TDO              INPUT  --              Com_Ctrl_221 --             1     slow
MC113 0         --                      --              --           --             0     slow
MC114 0         --                      --              --           --             0     slow
MC115 73   --   C_CLK_IN         INPUT  --              --           --             0     slow
MC116 0         --                      --              --           --             0     slow
MC117 74        --                      --              --           --             0     slow
MC118 75        --                      --              --           --             0     slow
MC119 0         --                      --              --           --             0     slow
MC120 76        --                      --              --           --             0     slow
MC121 0         --                      --              --           --             0     slow
MC122 0         --                      --              --           --             0     slow
MC123 77        --                      --              --           --             0     slow
MC124 0         --                      --              --           --             0     slow
MC125 79        --                      --              --           --             0     slow
MC126 80        --                      --              --           --             0     slow
MC127 0         --                      --              --           --             0     slow
MC128 81        --                      --              --           --             0     slow
MC0   2         D_CLK_IN         INPUT  --              --           --             0     slow
MC0   1         RESET_IN         INPUT  --              --           --             0     slow
MC0   84        --                      --              --           --             0     slow
MC0   83        A_CLK_IN         INPUT  --              --           --             0     slow

Logic Array Block	Logic Cells	I/O Pins	Foldbacks	TotalPT		FanIN	Cascades
A: LC1	- LC16		15/16(93%)	8/16(50%)	0/16(0%)	71/80(88%)	(12)	1
B: LC17	- LC32		11/16(68%)	8/16(50%)	0/16(0%)	38/80(47%)	(13)	0
C: LC33	- LC48		7/16(43%)	8/16(50%)	1/16(6%)	20/80(25%)	(15)	0
D: LC49	- LC64		8/16(50%)	8/16(50%)	1/16(6%)	28/80(35%)	(12)	0
E: LC65	- LC80		6/16(37%)	8/16(50%)	0/16(0%)	17/80(21%)	(12)	0
F: LC81	- LC96		1/16(6%)	8/16(50%)	1/16(6%)	4/80(5%)	(7)	0
G: LC97	- LC112		5/16(31%)	8/16(50%)	1/16(6%)	14/80(17%)	(14)	0
H: LC113- LC128		0/16(0%)	1/16(6%)	0/16(0%)	0/80(0%)	(0)	0

Total dedicated input used:	3/4 	(75%)
Total I/O pins used		57/64 	(89%)
Total Logic cells used 		54/128 	(42%)
Total Flip-Flop used 		41/128 	(32%)
Total Foldback logic used 	4/128 	(3%)
Total Nodes+FB/MCells 		57/128 	(44%)
Total cascade used 		1
Total input pins 		18
Total output pins 		42
Total Pts 			192
Creating pla file C:\IRCTRL.tt3 with 0 inputs 0 outputs, 0 pins 0 nodes and 0 pterms...

----------------  End fitter, Design FITS
$Device PLCC84 fits 
FIT1508 completed in 0.00 seconds
